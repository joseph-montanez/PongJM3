group 'com.shabb.pongfinal'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'kotlin'

sourceCompatibility = 1.8

repositories {
    maven { url "http://dl.bintray.com/jmonkeyengine/com.jme3" }
    maven { url "https://jitpack.io" }
    jcenter()
    mavenCentral()
}

sourceSets {
    main.resources.srcDirs = ['src']
}

def jme3 = [v:'3.1.0-stable', g:'org.jmonkeyengine']

dependencies {
    //-- JMonkey
    compile "${jme3.g}:jme3-core:${jme3.v}"
    runtime "${jme3.g}:jme3-desktop:${jme3.v}"
    runtime "${jme3.g}:jme3-lwjgl:${jme3.v}"
    compile "${jme3.g}:jme3-plugins:${jme3.v}"
    compile "${jme3.g}:jme3-jogg:${jme3.v}"
    compile "${jme3.g}:jme3-niftygui:${jme3.v}"
    compile "${jme3.g}:jme3-effects:${jme3.v}"
    compile "${jme3.g}:jme3-bullet-native:${jme3.v}"

    //-- Promises
    compile 'org.jdeferred:jdeferred-android-aar:1.2.6'

    //-- Kotlin For Scripting and Compiling
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-compiler:$kotlin_version"
    compile "org.jetbrains.kotlin:kotlin-script-util:$kotlin_version"

    //-- Used for AI
    compile group: 'com.badlogicgames.gdx', name: 'gdx-ai', version: '1.8.1'


    runtime project(':assets')

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

task wrapper(type: Wrapper) {
}

task createDirs << {

    def pkg = 'com.shabb.pongfinal'
    def dirs = [
            file("./src/main/java/$pkg"),
            file("./src/main/resources"),
            file("./assets/Interface"),
            file("./assets/MatDefs"),
            file("./assets/Materials"),
            file("./assets/Models"),
            file("./assets/Scenes"),
            file("./assets/Shaders"),
            file("./assets/Sounds"),
            file("./assets/Textures"),
    ]

    dirs.each {
        if( !it.exists() ) {
            println "Creating " + it
            it.mkdirs()
        }
        if( it.listFiles().length == 0 ) {
            def stub = new File(it, 'removeme.txt')
            println "Creating stub file to allow git checkin, file:$stub"
            stub.text = "Remove me when there are files here."
        }
    }
}

project(":assets") {
    apply plugin: "java"

    buildDir = rootProject.file("build/assets")

    sourceSets {
        main {
            resources {
                srcDir '.'
            }
        }
    }
}

buildscript {
    ext.kotlin_version = '1.1.3'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}